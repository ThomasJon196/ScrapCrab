version: '3.8'
services:
  influxdb:
    container_name: influxdb
    image: influxdb:2.0
    volumes:
      - ./influx/database:/var/lib/influxdb2
    env_file:
      - .env
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=${influx_user}
      - DOCKER_INFLUXDB_INIT_PASSWORD=${influx_pw}
      - DOCKER_INFLUXDB_INIT_ORG=${influx_org}
      - DOCKER_INFLUXDB_INIT_BUCKET=${influx_bucket}
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${influx_token}
    ports:
      - "8086:8086"
  
  web-scraper:
    container_name: scrapcrab
    image: scrapcrab:0.1
    env_file:
      - .env
    environment:
      - INFLUXDB_URL=influxdb
      - REFRESH_INTERVAL_MINUTES=30
    command: python scheduled_scraper.py
    depends_on: 
      - influxdb


  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - 9090:9090

  grafana:
    image: grafana/grafana-oss:9.3.1-ubuntu
    container_name: grafana
    ports:
        - 3000:3000
    volumes:
      - ./grafana:/var/lib/grafana
    user: "0:0"
    environment:
        GF_SECURITY_ADMIN_PASSWORD: grafana_totaly_secure_password

volumes:
  prometheus_data: {}